{
	"Version": "2019-10-30",
	"StartAction": "6e3f47b6-143e-4ed2-b390-8de0da59ec28",
	"Metadata": {
		"entryPointPosition": {
			"x": -479.2,
			"y": 84
		},
		"ActionMetadata": {
			"Try Expiration Date Again": {
				"position": {
					"x": 1380.8,
					"y": 222.4
				},
				"isFriendlyName": true
			},
			"Try Card Number Again": {
				"position": {
					"x": 457.6,
					"y": 238.4
				},
				"isFriendlyName": true
			},
			"Card Number Timeout": {
				"position": {
					"x": 390.4,
					"y": -408
				},
				"isFriendlyName": true
			},
			"Expiration Date Timeout": {
				"position": {
					"x": 1284,
					"y": -396.8
				},
				"isFriendlyName": true
			},
			"Get & Encrypt Card Number": {
				"position": {
					"x": 399.2,
					"y": 15.2
				},
				"isFriendlyName": true,
				"conditionMetadata": [],
				"countryCodePrefix": "+1"
			},
			"6e3f47b6-143e-4ed2-b390-8de0da59ec28": {
				"position": {
					"x": -404,
					"y": 275.2
				}
			},
			"3752e184-d8ec-429c-97fe-cd5ed81a74fa": {
				"position": {
					"x": 585.6,
					"y": 627.2
				}
			},
			"Record Payment Request ID": {
				"position": {
					"x": -100.8,
					"y": -16.8
				},
				"isFriendlyName": true,
				"dynamicParams": []
			},
			"Create Payment Request": {
				"position": {
					"x": -360,
					"y": 47.2
				},
				"isFriendlyName": true,
				"parameters": {
					"LambdaFunctionARN": {
						"displayName": "<createPaymentRequestLambdaArn>"
					}
				},
				"dynamicMetadata": {}
			},
			"Get & Encrypt Expiration Date": {
				"position": {
					"x": 1317.6,
					"y": 7.2
				},
				"isFriendlyName": true,
				"conditionMetadata": [],
				"countryCodePrefix": "+1"
			},
			"Credit Card Timeout Check": {
				"position": {
					"x": 519.2,
					"y": -185.6
				},
				"isFriendlyName": true,
				"conditions": [],
				"conditionMetadata": [
					{
						"id": "40b08601-1a43-4422-82d0-0231bf820ae6",
						"operator": {
							"name": "Equals",
							"value": "Equals",
							"shortDisplay": "="
						},
						"value": ".Timeout"
					}
				]
			},
			"Store Encrypted Card Number": {
				"position": {
					"x": 647.2,
					"y": 20
				},
				"isFriendlyName": true,
				"dynamicParams": []
			},
			"Expiration Date Timeout Check": {
				"position": {
					"x": 1420,
					"y": -191.2
				},
				"isFriendlyName": true,
				"conditions": [],
				"conditionMetadata": [
					{
						"id": "1d70c7cd-bb98-4d8c-84c2-a1fc35d790e4",
						"operator": {
							"name": "Equals",
							"value": "Equals",
							"shortDisplay": "="
						},
						"value": ".Timeout"
					}
				]
			},
			"Internal Error": {
				"position": {
					"x": 261.6,
					"y": 552
				},
				"isFriendlyName": true
			},
			"Store Encrypted Expiration Date": {
				"position": {
					"x": 1579.2,
					"y": 16
				},
				"isFriendlyName": true,
				"dynamicParams": []
			},
			"Record Transaction ID": {
				"position": {
					"x": 2560,
					"y": -15.2
				},
				"isFriendlyName": true,
				"dynamicParams": []
			},
			"Submit Payment": {
				"position": {
					"x": 2332.8,
					"y": -11.2
				},
				"isFriendlyName": true,
				"parameters": {
					"LambdaFunctionARN": {
						"displayName": "<submitPaymentLambdaArn>"
					}
				},
				"dynamicMetadata": {
					"CardToken": false,
					"ExpirationDate": false
				}
			},
			"Tokenize Transaction": {
				"position": {
					"x": 2097.6,
					"y": -5.6
				},
				"isFriendlyName": true,
				"parameters": {
					"LambdaFunctionARN": {
						"displayName": "<tokenizeTransactionLambdaArn>"
					}
				},
				"dynamicMetadata": {}
			},
			"Payment Success": {
				"position": {
					"x": 2780.8,
					"y": -20.8
				},
				"isFriendlyName": true
			},
			"Email Receipt": {
				"position": {
					"x": 3244,
					"y": -19.2
				},
				"isFriendlyName": true,
				"parameters": {
					"LambdaFunctionARN": {
						"displayName": "<emailReceiptLambdaArn>"
					}
				},
				"dynamicMetadata": {}
			},
			"DEBUG Submit Payment Error": {
				"position": {
					"x": 2564.8,
					"y": 188
				},
				"isFriendlyName": true
			},
			"DEBUG Tokenize Error": {
				"position": {
					"x": 2331.2,
					"y": 300.8
				},
				"isFriendlyName": true
			},
			"Receipt Success": {
				"position": {
					"x": 3464,
					"y": -104
				},
				"isFriendlyName": true
			},
			"Receipt Error": {
				"position": {
					"x": 3464.8,
					"y": 83.2
				},
				"isFriendlyName": true
			},
			"Check for Customer Email": {
				"position": {
					"x": 3002.4,
					"y": -19.2
				},
				"isFriendlyName": true,
				"conditions": [],
				"conditionMetadata": [
					{
						"id": "c9213267-644c-4fca-8158-abce205c5cb1",
						"operator": {
							"name": "Contains",
							"value": "Contains",
							"shortDisplay": "contains"
						},
						"value": "@"
					}
				]
			},
			"fe955f82-d4e7-400e-843d-d28dfa98d42a": {
				"position": {
					"x": 4145.6,
					"y": 212
				}
			},
			"Redact Sensitive Contact Attributes": {
				"position": {
					"x": 3922.4,
					"y": 209.6
				},
				"isFriendlyName": true,
				"dynamicParams": []
			}
		},
		"Annotations": [
			{
				"type": "default",
				"id": "685792e5-d5a3-465e-811f-b6e52d8da842",
				"content": "These should be replaced with more robust error handling.",
				"actionId": "DEBUG Tokenize Error",
				"isFolded": true,
				"position": {
					"x": 4253.166666666667,
					"y": 581.6666666666666
				},
				"size": {
					"height": 295,
					"width": 300
				}
			},
			{
				"type": "default",
				"id": "a43e3dbe-fbea-460d-b011-cd6e4f5f0c1b",
				"content": "These should be replaced with more robust error handling.",
				"actionId": "DEBUG Submit Payment Error",
				"isFolded": true,
				"position": {
					"x": 4545.166666666667,
					"y": 440.66666666666663
				},
				"size": {
					"height": 295,
					"width": 300
				}
			}
		],
		"name": "Inbound C3 DTMF Flow Module (Working Copy)",
		"description": "",
		"status": "published",
		"hash": {}
	},
	"Actions": [
		{
			"Parameters": {
				"Text": "There was a problem with your expiration date. Please try again."
			},
			"Identifier": "Try Expiration Date Again",
			"Type": "MessageParticipant",
			"Transitions": {
				"NextAction": "Get & Encrypt Expiration Date",
				"Errors": [
					{
						"NextAction": "Get & Encrypt Expiration Date",
						"ErrorType": "NoMatchingError"
					}
				]
			}
		},
		{
			"Parameters": {
				"Text": "There was a problem with your card number. Please try again."
			},
			"Identifier": "Try Card Number Again",
			"Type": "MessageParticipant",
			"Transitions": {
				"NextAction": "Get & Encrypt Card Number",
				"Errors": [
					{
						"NextAction": "Get & Encrypt Card Number",
						"ErrorType": "NoMatchingError"
					}
				]
			}
		},
		{
			"Parameters": {
				"Text": "Are you still there?"
			},
			"Identifier": "Card Number Timeout",
			"Type": "MessageParticipant",
			"Transitions": {
				"NextAction": "Get & Encrypt Card Number",
				"Errors": [
					{
						"NextAction": "Get & Encrypt Card Number",
						"ErrorType": "NoMatchingError"
					}
				]
			}
		},
		{
			"Parameters": {
				"Text": "Are you still there?"
			},
			"Identifier": "Expiration Date Timeout",
			"Type": "MessageParticipant",
			"Transitions": {
				"NextAction": "Get & Encrypt Expiration Date",
				"Errors": [
					{
						"NextAction": "Get & Encrypt Expiration Date",
						"ErrorType": "NoMatchingError"
					}
				]
			}
		},
		{
			"Parameters": {
				"StoreInput": "True",
				"InputTimeLimitSeconds": "10",
				"Text": "Please enter your card number followed by the pound key when complete.",
				"DTMFConfiguration": {
					"DisableCancelKey": "False",
					"InputTerminationSequence": "#"
				},
				"InputValidation": {
					"CustomValidation": {
						"MaximumLength": "20"
					}
				},
				"InputEncryption": {
					"EncryptionKeyId": "80341469-7fe3-48a2-8e76-dc5014b1f930",
					"Key": "-----BEGIN CERTIFICATE-----\nMIIGQTCCBCmgAwIBAgIUZ5EGk19y9R2QCk2M0UwCFWBlpNwwDQYJKoZIhvcNAQEL\nBQAwga8xCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJVVDEOMAwGA1UEBwwFUHJvdm8x\nGjAYBgNVBAoMEUN1c3RvbWVyIER5bmFtaWNzMRQwEgYDVQQLDAtEZXZlbG9wbWVu\ndDEaMBgGA1UEAwwRVHlsZXIgSGVuZHJpY2tzb24xNTAzBgkqhkiG9w0BCQEWJnR5\nbGVyLmhlbmRyaWNrc29uQGN1c3RvbWVyZHluYW1pY3MuY29tMB4XDTI0MDQwOTIx\nNDMzN1oXDTI2MDQwOTIxNDMzN1owga8xCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJV\nVDEOMAwGA1UEBwwFUHJvdm8xGjAYBgNVBAoMEUN1c3RvbWVyIER5bmFtaWNzMRQw\nEgYDVQQLDAtEZXZlbG9wbWVudDEaMBgGA1UEAwwRVHlsZXIgSGVuZHJpY2tzb24x\nNTAzBgkqhkiG9w0BCQEWJnR5bGVyLmhlbmRyaWNrc29uQGN1c3RvbWVyZHluYW1p\nY3MuY29tMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAoI1LbVQBTrL0\nlZZjKiLefpliKsIAuTlnBohcgmeWpgOYacbgMWmcNy7n1mBJimjSV4GTRTPF5t/3\nkItXxPKMU17rjeMOFhz8mlvuUWX0O6jU6sCUSIwIdNhgQzGxrvnwydXoVY+xuAAS\nO1oW4eK6utZ0c28LdVoBg/WzFGoNTV0DQQ6toq+87YtAVgkynZyhNVuo5EzM7oM3\n0mgSFHkMBqDrak7qLGYxwrp388hppF2wNyzC+B5XZ8LbvH6ktR0wssU0JTXIBaT2\nvh1ujHgvkiDkh8Dj5ci5cEF3aUbgGf91j+AEKsSl3tMFprqzkX3U5H+79MQ9n6QJ\n3hARl0tmA4c2vGYbQX3OpRWX+PN4QN4jryIMxFIKBGtW+kl7dMgezHozbsKzQ9GK\nx6zLBj8H28zfPH616PlFW7xuoP6+lC/ym5BrpIwmxgXmRm0kHOO11nVp+5WCM0iU\nLol8XnSyDXN5Zjm7EyOdILqzqtHpW2jc017bM/OvYqvjDFJoSCu0AodgEqMCa5hz\nrUpFHR+jSaEpbsQg4n4GYpprDx2KvAc4VmdseChfbpzkFHBtTTic1oUoXNlkdm0X\n/wUlGc3lrG3mwU76tb2GLbxYs8CvWzY+iUfDdOpEFu/dkwDWx/gqopAFoD0b/jib\nd69d+VDayO1h+9mJwHeFX9rXVZmGiEMCAwEAAaNTMFEwHQYDVR0OBBYEFKRuXTNT\niZi1/cdETtHEkRJ7UDEPMB8GA1UdIwQYMBaAFKRuXTNTiZi1/cdETtHEkRJ7UDEP\nMA8GA1UdEwEB/wQFMAMBAf8wDQYJKoZIhvcNAQELBQADggIBACTcBrFXkP9C1rDy\nKbP7paz83K100n6ducUbv9aDRCvaXwA7KBRsNuWJ+C2FNFYGi3PCnx/0BiFgRW/B\n5vg2ugchLQQBPwDaKNzd42Vt6/44iqz26EeHBdEhoUIENn+cLy9TTloMfl5ouKJE\nCdHrsQT1hHPd/mqBcYtJE/8QpLhgZpfOZY7dhdgCbhXlceRAsNoRL7M3zc5h/Fq0\n3etyaBHrHzDK+QXHckmw4V2FTrJiQvqMUApmvW+mY7TUPH7i5TXc08s3kjmugqxf\nYI8LiAJ1Y+ffnpH3fl51kf3c4m9ri9z5sQl/1EJ8Zd4qAK0Lc76dOuS9Cbu82jke\n28WkGIFE/EFPysp05OXvfqce2j4TX33Y+M1HjC8VEqKva+0mTfUqxehh1OtcoEEp\np9oHhgQsMdg42SpX9uaDM8fF95ZiJMu63+tMaIxI2s9ehNejNip003V98ufbfjro\ntNh8gvN/Q9zPgZcAsAWcMwooF3aSBsseIOMeQAxaytjH2gqoWo4QrODgRHcJU059\na3tu4AFjGROo6RZcmK0eysKIksE0HkrHRXD7dKUIu6bSUeNtKcAZhFmF59C7yQb/\nOq8j1bDUDqmfIQGAkFqfDabt/X1MgOzAi2TPni+nYOXFnLAJVJttWFQBCm+G4yaP\nZbVYUWwU8MFsYWqqFNqw400tR5cY\n-----END CERTIFICATE-----\n"
				}
			},
			"Identifier": "Get & Encrypt Card Number",
			"Type": "GetParticipantInput",
			"Transitions": {
				"NextAction": "Credit Card Timeout Check",
				"Errors": [
					{
						"NextAction": "Try Card Number Again",
						"ErrorType": "NoMatchingError"
					}
				]
			}
		},
		{
			"Parameters": {
				"FlowLoggingBehavior": "Enabled"
			},
			"Identifier": "6e3f47b6-143e-4ed2-b390-8de0da59ec28",
			"Type": "UpdateFlowLoggingBehavior",
			"Transitions": {
				"NextAction": "Create Payment Request"
			}
		},
		{
			"Parameters": {},
			"Identifier": "3752e184-d8ec-429c-97fe-cd5ed81a74fa",
			"Type": "EndFlowModuleExecution",
			"Transitions": {}
		},
		{
			"Parameters": {
				"Attributes": {
					"PaymentRequestId": "$.External.PaymentRequestId"
				},
				"TargetContact": "Current"
			},
			"Identifier": "Record Payment Request ID",
			"Type": "UpdateContactAttributes",
			"Transitions": {
				"NextAction": "Get & Encrypt Card Number",
				"Errors": [
					{
						"NextAction": "Internal Error",
						"ErrorType": "NoMatchingError"
					}
				]
			}
		},
		{
			"Parameters": {
				"LambdaFunctionARN": "<createPaymentRequestLambdaArn>",
				"InvocationTimeLimitSeconds": "8",
				"ResponseValidation": {
					"ResponseType": "JSON"
				}
			},
			"Identifier": "Create Payment Request",
			"Type": "InvokeLambdaFunction",
			"Transitions": {
				"NextAction": "Record Payment Request ID",
				"Errors": [
					{
						"NextAction": "Internal Error",
						"ErrorType": "NoMatchingError"
					}
				]
			}
		},
		{
			"Parameters": {
				"StoreInput": "True",
				"InputTimeLimitSeconds": "5",
				"Text": "Please enter your card's expiration date, followed by the pound key when complete.",
				"DTMFConfiguration": {
					"DisableCancelKey": "False",
					"InputTerminationSequence": "#"
				},
				"InputValidation": {
					"CustomValidation": {
						"MaximumLength": "4"
					}
				},
				"InputEncryption": {
					"EncryptionKeyId": "80341469-7fe3-48a2-8e76-dc5014b1f930",
					"Key": "-----BEGIN CERTIFICATE-----\nMIIGQTCCBCmgAwIBAgIUZ5EGk19y9R2QCk2M0UwCFWBlpNwwDQYJKoZIhvcNAQEL\nBQAwga8xCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJVVDEOMAwGA1UEBwwFUHJvdm8x\nGjAYBgNVBAoMEUN1c3RvbWVyIER5bmFtaWNzMRQwEgYDVQQLDAtEZXZlbG9wbWVu\ndDEaMBgGA1UEAwwRVHlsZXIgSGVuZHJpY2tzb24xNTAzBgkqhkiG9w0BCQEWJnR5\nbGVyLmhlbmRyaWNrc29uQGN1c3RvbWVyZHluYW1pY3MuY29tMB4XDTI0MDQwOTIx\nNDMzN1oXDTI2MDQwOTIxNDMzN1owga8xCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJV\nVDEOMAwGA1UEBwwFUHJvdm8xGjAYBgNVBAoMEUN1c3RvbWVyIER5bmFtaWNzMRQw\nEgYDVQQLDAtEZXZlbG9wbWVudDEaMBgGA1UEAwwRVHlsZXIgSGVuZHJpY2tzb24x\nNTAzBgkqhkiG9w0BCQEWJnR5bGVyLmhlbmRyaWNrc29uQGN1c3RvbWVyZHluYW1p\nY3MuY29tMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAoI1LbVQBTrL0\nlZZjKiLefpliKsIAuTlnBohcgmeWpgOYacbgMWmcNy7n1mBJimjSV4GTRTPF5t/3\nkItXxPKMU17rjeMOFhz8mlvuUWX0O6jU6sCUSIwIdNhgQzGxrvnwydXoVY+xuAAS\nO1oW4eK6utZ0c28LdVoBg/WzFGoNTV0DQQ6toq+87YtAVgkynZyhNVuo5EzM7oM3\n0mgSFHkMBqDrak7qLGYxwrp388hppF2wNyzC+B5XZ8LbvH6ktR0wssU0JTXIBaT2\nvh1ujHgvkiDkh8Dj5ci5cEF3aUbgGf91j+AEKsSl3tMFprqzkX3U5H+79MQ9n6QJ\n3hARl0tmA4c2vGYbQX3OpRWX+PN4QN4jryIMxFIKBGtW+kl7dMgezHozbsKzQ9GK\nx6zLBj8H28zfPH616PlFW7xuoP6+lC/ym5BrpIwmxgXmRm0kHOO11nVp+5WCM0iU\nLol8XnSyDXN5Zjm7EyOdILqzqtHpW2jc017bM/OvYqvjDFJoSCu0AodgEqMCa5hz\nrUpFHR+jSaEpbsQg4n4GYpprDx2KvAc4VmdseChfbpzkFHBtTTic1oUoXNlkdm0X\n/wUlGc3lrG3mwU76tb2GLbxYs8CvWzY+iUfDdOpEFu/dkwDWx/gqopAFoD0b/jib\nd69d+VDayO1h+9mJwHeFX9rXVZmGiEMCAwEAAaNTMFEwHQYDVR0OBBYEFKRuXTNT\niZi1/cdETtHEkRJ7UDEPMB8GA1UdIwQYMBaAFKRuXTNTiZi1/cdETtHEkRJ7UDEP\nMA8GA1UdEwEB/wQFMAMBAf8wDQYJKoZIhvcNAQELBQADggIBACTcBrFXkP9C1rDy\nKbP7paz83K100n6ducUbv9aDRCvaXwA7KBRsNuWJ+C2FNFYGi3PCnx/0BiFgRW/B\n5vg2ugchLQQBPwDaKNzd42Vt6/44iqz26EeHBdEhoUIENn+cLy9TTloMfl5ouKJE\nCdHrsQT1hHPd/mqBcYtJE/8QpLhgZpfOZY7dhdgCbhXlceRAsNoRL7M3zc5h/Fq0\n3etyaBHrHzDK+QXHckmw4V2FTrJiQvqMUApmvW+mY7TUPH7i5TXc08s3kjmugqxf\nYI8LiAJ1Y+ffnpH3fl51kf3c4m9ri9z5sQl/1EJ8Zd4qAK0Lc76dOuS9Cbu82jke\n28WkGIFE/EFPysp05OXvfqce2j4TX33Y+M1HjC8VEqKva+0mTfUqxehh1OtcoEEp\np9oHhgQsMdg42SpX9uaDM8fF95ZiJMu63+tMaIxI2s9ehNejNip003V98ufbfjro\ntNh8gvN/Q9zPgZcAsAWcMwooF3aSBsseIOMeQAxaytjH2gqoWo4QrODgRHcJU059\na3tu4AFjGROo6RZcmK0eysKIksE0HkrHRXD7dKUIu6bSUeNtKcAZhFmF59C7yQb/\nOq8j1bDUDqmfIQGAkFqfDabt/X1MgOzAi2TPni+nYOXFnLAJVJttWFQBCm+G4yaP\nZbVYUWwU8MFsYWqqFNqw400tR5cY\n-----END CERTIFICATE-----\n"
				}
			},
			"Identifier": "Get & Encrypt Expiration Date",
			"Type": "GetParticipantInput",
			"Transitions": {
				"NextAction": "Expiration Date Timeout Check",
				"Errors": [
					{
						"NextAction": "Try Expiration Date Again",
						"ErrorType": "NoMatchingError"
					}
				]
			}
		},
		{
			"Parameters": {
				"ComparisonValue": "$.Attributes.$.StoredCustomerInput"
			},
			"Identifier": "Credit Card Timeout Check",
			"Type": "Compare",
			"Transitions": {
				"NextAction": "Store Encrypted Card Number",
				"Conditions": [
					{
						"NextAction": "Card Number Timeout",
						"Condition": {
							"Operator": "Equals",
							"Operands": [".Timeout"]
						}
					}
				],
				"Errors": [
					{
						"NextAction": "Store Encrypted Card Number",
						"ErrorType": "NoMatchingCondition"
					}
				]
			}
		},
		{
			"Parameters": {
				"Attributes": {
					"EncryptedCreditCard": "$.StoredCustomerInput"
				},
				"TargetContact": "Current"
			},
			"Identifier": "Store Encrypted Card Number",
			"Type": "UpdateContactAttributes",
			"Transitions": {
				"NextAction": "Get & Encrypt Expiration Date",
				"Errors": [
					{
						"NextAction": "Internal Error",
						"ErrorType": "NoMatchingError"
					}
				]
			}
		},
		{
			"Parameters": {
				"ComparisonValue": "$.Attributes.$.StoredCustomerInput"
			},
			"Identifier": "Expiration Date Timeout Check",
			"Type": "Compare",
			"Transitions": {
				"NextAction": "Store Encrypted Expiration Date",
				"Conditions": [
					{
						"NextAction": "Expiration Date Timeout",
						"Condition": {
							"Operator": "Equals",
							"Operands": [".Timeout"]
						}
					}
				],
				"Errors": [
					{
						"NextAction": "Store Encrypted Expiration Date",
						"ErrorType": "NoMatchingCondition"
					}
				]
			}
		},
		{
			"Parameters": {
				"Text": "We're sorry, an error has occured that prevents us from collecting the payment. Please report this to your customer service representative and try again later."
			},
			"Identifier": "Internal Error",
			"Type": "MessageParticipant",
			"Transitions": {
				"NextAction": "3752e184-d8ec-429c-97fe-cd5ed81a74fa",
				"Errors": [
					{
						"NextAction": "3752e184-d8ec-429c-97fe-cd5ed81a74fa",
						"ErrorType": "NoMatchingError"
					}
				]
			}
		},
		{
			"Parameters": {
				"Attributes": {
					"EncryptedExpirationDate": "$.StoredCustomerInput"
				},
				"TargetContact": "Current"
			},
			"Identifier": "Store Encrypted Expiration Date",
			"Type": "UpdateContactAttributes",
			"Transitions": {
				"NextAction": "Tokenize Transaction",
				"Errors": [
					{
						"NextAction": "Internal Error",
						"ErrorType": "NoMatchingError"
					}
				]
			}
		},
		{
			"Parameters": {
				"Attributes": {
					"TransactionId": "$.External.TransactionId"
				},
				"TargetContact": "Current"
			},
			"Identifier": "Record Transaction ID",
			"Type": "UpdateContactAttributes",
			"Transitions": {
				"NextAction": "Payment Success",
				"Errors": [
					{
						"NextAction": "Payment Success",
						"ErrorType": "NoMatchingError"
					}
				]
			}
		},
		{
			"Parameters": {
				"LambdaFunctionARN": "<submitPaymentLambdaArn>",
				"InvocationTimeLimitSeconds": "8",
				"LambdaInvocationAttributes": {
					"CardToken": "$.External.cardToken",
					"ExpirationDate": "$.External.exp"
				},
				"ResponseValidation": {
					"ResponseType": "JSON"
				}
			},
			"Identifier": "Submit Payment",
			"Type": "InvokeLambdaFunction",
			"Transitions": {
				"NextAction": "Record Transaction ID",
				"Errors": [
					{
						"NextAction": "DEBUG Submit Payment Error",
						"ErrorType": "NoMatchingError"
					}
				]
			}
		},
		{
			"Parameters": {
				"LambdaFunctionARN": "<tokenizeTransactionLambdaArn>",
				"InvocationTimeLimitSeconds": "8",
				"ResponseValidation": {
					"ResponseType": "JSON"
				}
			},
			"Identifier": "Tokenize Transaction",
			"Type": "InvokeLambdaFunction",
			"Transitions": {
				"NextAction": "Submit Payment",
				"Errors": [
					{
						"NextAction": "DEBUG Tokenize Error",
						"ErrorType": "NoMatchingError"
					}
				]
			}
		},
		{
			"Parameters": {
				"Text": "Your payment was processed successfully."
			},
			"Identifier": "Payment Success",
			"Type": "MessageParticipant",
			"Transitions": {
				"NextAction": "Check for Customer Email",
				"Errors": [
					{
						"NextAction": "Check for Customer Email",
						"ErrorType": "NoMatchingError"
					}
				]
			}
		},
		{
			"Parameters": {
				"LambdaFunctionARN": "<emailReceiptLambdaArn>",
				"InvocationTimeLimitSeconds": "8",
				"ResponseValidation": {
					"ResponseType": "JSON"
				}
			},
			"Identifier": "Email Receipt",
			"Type": "InvokeLambdaFunction",
			"Transitions": {
				"NextAction": "Receipt Success",
				"Errors": [
					{
						"NextAction": "Receipt Error",
						"ErrorType": "NoMatchingError"
					}
				]
			}
		},
		{
			"Parameters": {
				"Text": "There was an error submitting the payment. Please check the debug logs."
			},
			"Identifier": "DEBUG Submit Payment Error",
			"Type": "MessageParticipant",
			"Transitions": {
				"NextAction": "Redact Sensitive Contact Attributes",
				"Errors": [
					{
						"NextAction": "Redact Sensitive Contact Attributes",
						"ErrorType": "NoMatchingError"
					}
				]
			}
		},
		{
			"Parameters": {
				"Text": "There was an error during tokenization. Please check the debug logs."
			},
			"Identifier": "DEBUG Tokenize Error",
			"Type": "MessageParticipant",
			"Transitions": {
				"NextAction": "Redact Sensitive Contact Attributes",
				"Errors": [
					{
						"NextAction": "Redact Sensitive Contact Attributes",
						"ErrorType": "NoMatchingError"
					}
				]
			}
		},
		{
			"Parameters": {
				"Text": "A receipt has been sent to your email address at $.Attributes.['Email']."
			},
			"Identifier": "Receipt Success",
			"Type": "MessageParticipant",
			"Transitions": {
				"NextAction": "Redact Sensitive Contact Attributes",
				"Errors": [
					{
						"NextAction": "Redact Sensitive Contact Attributes",
						"ErrorType": "NoMatchingError"
					}
				]
			}
		},
		{
			"Parameters": {
				"Text": "There was an error sending the receipt to your email address at $.Attributes.['Email']. Please contact customer support to receive a receipt for this transaction."
			},
			"Identifier": "Receipt Error",
			"Type": "MessageParticipant",
			"Transitions": {
				"NextAction": "Redact Sensitive Contact Attributes",
				"Errors": [
					{
						"NextAction": "Redact Sensitive Contact Attributes",
						"ErrorType": "NoMatchingError"
					}
				]
			}
		},
		{
			"Parameters": {
				"ComparisonValue": "$.Attributes.Email"
			},
			"Identifier": "Check for Customer Email",
			"Type": "Compare",
			"Transitions": {
				"NextAction": "Redact Sensitive Contact Attributes",
				"Conditions": [
					{
						"NextAction": "Email Receipt",
						"Condition": {
							"Operator": "TextContains",
							"Operands": ["@"]
						}
					}
				],
				"Errors": [
					{
						"NextAction": "Redact Sensitive Contact Attributes",
						"ErrorType": "NoMatchingCondition"
					}
				]
			}
		},
		{
			"Parameters": {},
			"Identifier": "fe955f82-d4e7-400e-843d-d28dfa98d42a",
			"Type": "EndFlowModuleExecution",
			"Transitions": {}
		},
		{
			"Parameters": {
				"Attributes": {
					"EncryptedCreditCard": "REDACTED",
					"EncryptedExpirationDate": "REDACTED"
				},
				"TargetContact": "Current"
			},
			"Identifier": "Redact Sensitive Contact Attributes",
			"Type": "UpdateContactAttributes",
			"Transitions": {
				"NextAction": "fe955f82-d4e7-400e-843d-d28dfa98d42a",
				"Errors": [
					{
						"NextAction": "fe955f82-d4e7-400e-843d-d28dfa98d42a",
						"ErrorType": "NoMatchingError"
					}
				]
			}
		}
	],
	"Settings": {
		"InputParameters": [],
		"OutputParameters": [],
		"Transitions": [
			{
				"DisplayName": "Success",
				"ReferenceName": "Success",
				"Description": ""
			},
			{
				"DisplayName": "Error",
				"ReferenceName": "Error",
				"Description": ""
			}
		]
	}
}
